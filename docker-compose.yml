services:
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/alert.rules.yml:/etc/prometheus/alert.rules.yml
    networks:
      - ml_experiment
  
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - "18080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - ml_experiment

  metrics-agent:
    image: docker:27.0.3-cli
    container_name: metrics-agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: >
      sh -c "
        while true; do
          docker stats fastapi-demo --no-stream --format '{{json .}}';
          sleep 10;
        done
      "
    networks:
      - ml_experiment

  fastapi-demo:
    build: ./fastapi-demo
    container_name: fastapi-demo
    ports:
      - "8000:8000"
    volumes:
      - ./fastapi-demo:/app
    networks:
      - ml_experiment

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "8088:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/logs:/var/log/nginx
    networks:
      - ml_experiment

  kafka-kraft:
    image: apache/kafka:3.7.0
    container_name: kafka-kraft
    ports:
      - "9092:9092"
    environment:
      - KAFKA_NODE_ID=1
      - KAFKA_PROCESS_ROLES=broker,controller
      - KAFKA_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@kafka-kraft:9093
      - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka-kraft:9092
      - KAFKA_LOG_DIRS=/tmp/kraft-combined-logs
    networks:
      - ml_experiment

  vector:
    image: timberio/vector:0.47.0-debian
    container_name: vector
    depends_on:
      - kafka-kraft
    ports:
      - "8686:8686"
    env_file:
      - .env
    volumes:
      - ./vector.toml:/etc/vector/vector.toml:ro
      - ./nginx/logs:/var/log/nginx:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command: --config /etc/vector/vector.toml
    networks:
      - ml_experiment

  spark-master:
    image: apache/spark:latest
    container_name: spark-master
    hostname: spark-master
    user: root
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_HOST=spark-master
      - HF_HUB_DISABLE_XET=1
    ports:
      - "7077:7077"   # RPC
      - "8080:8080"   # Web UI
    command: >
      sh -c "pip install -r /opt/spark/work-dir/requirements.txt --no-cache-dir &&
            /opt/spark/bin/spark-class org.apache.spark.deploy.master.Master"
    volumes:
     - ./spark:/opt/spark/work-dir
    networks:
      - ml_experiment

  spark-worker:
    image: apache/spark:latest
    container_name: spark-worker
    hostname: spark-worker
    user: root
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - HF_HUB_DISABLE_XET=1
    depends_on:
      - spark-master
    ports:
      - "8081:8081"   # Worker UI
    command: >
      sh -c "pip install -r /opt/spark/work-dir/requirements.txt --no-cache-dir &&
            /opt/spark/bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077"
    volumes:
      - ./spark:/opt/spark/work-dir
    networks:
      - ml_experiment

networks:
  ml_experiment:
    driver: bridge

