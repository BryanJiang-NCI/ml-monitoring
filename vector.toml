# ========== Source ==========
[sources.app_container_log]
type = "docker_logs"
include_containers = ["fastapi-demo"]

[sources.nginx_access]
type = "file"
include = ["/var/log/nginx/access_json.log"]

[sources.nginx_error]
type = "file"
include = ["/var/log/nginx/error.log"]

[sources.github_commits]
type = "file"
include = ["/var/log/vector-feeder/github_commits.jsonl"]

[sources.github_actions]
type = "file"
include = ["/var/log/vector-feeder/github_actions.jsonl"]

[sources.public_cloud]
type = "file"
include = ["/var/log/vector-feeder/cloudtrail.jsonl"]

# ========== Transforms ==========
[transforms.app_container_log_tag]
type = "remap"
inputs = ["app_container_log"]
source = '.source_type = "app_container_log"'

[transforms.nginx_access_tag]
type = "remap"
inputs = ["nginx_access"]
source = '.source_type = "nginx_access"'

[transforms.nginx_error_tag]
type = "remap"
inputs = ["nginx_error"]
source = '.source_type = "nginx_error"'

[transforms.github_commits_tag]
type = "remap"
inputs = ["github_commits"]
source = '.source_type = "github_commits"'

[transforms.github_actions_tag]
type = "remap"
inputs = ["github_actions"]
source = '.source_type = "github_actions"'

[transforms.public_cloud_tag]
type = "remap"
inputs = ["public_cloud"]
source = '.source_type = "public_cloud"'


[sources.cadvisor_metrics]
type = "prometheus_scrape"
endpoints = ["http://fastapi-demo:9100/metrics"]

[transforms.filter_metrics]
type = "filter"
inputs = ["cadvisor_metrics"]
condition = '''
.name == "node_load1" ||
.name == "node_load5" ||
.name == "node_load15" ||
.name == "node_memory_MemTotal_bytes" ||
.name == "node_filesystem_avail_bytes" ||
.name == "node_filesystem_size_bytes" ||
.name == "node_filesystem_free_bytes" ||
.name == "node_network_up" ||
.name == "node_network_info"
'''

[transforms.filter_metrics_tag]
type = "metric_to_log"
inputs = [ "filter_metrics" ]

[transforms.app_container_metrics_tag]
type = "remap"
inputs = ["filter_metrics_tag"]
source = '''
.source_type = "app_container_metrics"

if exists(.counter.value) {
    .value = .counter.value
} else if exists(.gauge.value) {
    .value = .gauge.value
}
del(.counter)
del(.gauge)

if exists(.tags.device) {
    .device = .tags.device
} else if exists(.tags.cpu) {
    .cpu = .tags.cpu
    .mode = .tags.mode
}
del(.tags)
'''



# ========== Sink ==========
[sinks.to_kafka]
type = "kafka"
inputs = ["github_commits_tag", "github_actions_tag", "nginx_access_tag", "nginx_error_tag", "app_container_metrics_tag", "app_container_log_tag", "public_cloud_tag"]
bootstrap_servers = "kafka-kraft:9092"
topic = "monitoring-data"
encoding.codec = "json"

[sinks.to_console]
type = "console"
inputs = ["app_container_metrics_tag"]
encoding.codec = "json"
